{
  for (int index=0; index < SILENT_ONLY_TAGS.length; index++) {
    for (int x=0; x < progress.length; x++) {
      if (progress[x].length() < 250) {
        if (progress[x].contains(SILENT_ONLY_TAGS[index].split("#")[0])) {
          String logcat_timestamp=MiscUtils.logcatTimeStampParser(progress[x]);
          Log.i(TAG,"TIME::" + logcat_timestamp);
          Log.i(TAG,"Detected>>>>" + SILENT_ONLY_TAGS[index].split("#")[1]);
          if (SILENT_ONLY_TAGS[index].split("#")[1].equals("TYPE0")) {
            CapturedSmsData setmsg=new CapturedSmsData();
            setmsg.setSenderNumber("unknown");
            setmsg.setSenderMsg("no data");
            int newCount=x - 15;
            if (newCount > 0) {
              while (newCount < x) {
                if (progress[newCount].contains(DETECTION_PHONENUM_SMS_DATA[2].toString())) {
                  try {
                    String number=progress[newCount].substring(progress[newCount].indexOf("OrigAddr")).replace(DETECTION_PHONENUM_SMS_DATA[2].toString(),"").trim();
                    setmsg.setSenderNumber(number);
                  }
 catch (                  Exception ee) {
                    Log.e(TAG,"Error parsing number",ee);
                  }
                }
 else                 if (progress[newCount].contains(DETECTION_PHONENUM_SMS_DATA[1].toString())) {
                  try {
                    String smsdata=progress[newCount].substring(progress[newCount].indexOf("'") + 1,progress[newCount].length() - 1);
                    setmsg.setSenderMsg(smsdata);
                  }
 catch (                  Exception ee) {
                    Log.e(TAG,"Error parsing SMS data:\n" + ee.toString(),ee);
                  }
                }
                newCount++;
              }
            }
            setmsg.setSmsTimestamp(logcat_timestamp);
            setmsg.setSmsType("TYPE0");
            setmsg.setCurrent_lac(mAimsicdService.getCellTracker().getMonitorCell().getLAC());
            setmsg.setCurrent_cid(mAimsicdService.getCellTracker().getMonitorCell().getCID());
            setmsg.setCurrent_nettype(Device.getNetworkTypeName(mAimsicdService.getCell().getNetType()));
            int isRoaming=0;
            if ("true".equals(mAimsicdService.getCellTracker().getDevice().isRoaming())) {
              isRoaming=1;
            }
            setmsg.setCurrent_roam_status(isRoaming);
            setmsg.setCurrent_gps_lat(mAimsicdService.lastKnownLocation().getLatitudeInDegrees());
            setmsg.setCurrent_gps_lon(mAimsicdService.lastKnownLocation().getLongitudeInDegrees());
            if (!dbacess.isTimeStampInDB(logcat_timestamp)) {
              dbacess.storeCapturedSms(setmsg);
              dbacess.toEventLog(3,"Detected Type-0 SMS");
              MiscUtils.startPopUpInfo(tContext,6);
            }
 else {
              Log.d(TAG,"Detected Sms already logged");
            }
          }
 else           if ("MWI".equals(SILENT_ONLY_TAGS[index].split("#")[1].trim())) {
            Log.i(TAG,"MWI DETECTED");
            CapturedSmsData setmsg=new CapturedSmsData();
            setmsg.setSenderNumber("unknown");
            setmsg.setSenderMsg("no data");
            int newCount=x - 15;
            if (newCount > 0) {
              while (newCount < x) {
                if (progress[newCount].contains(DETECTION_PHONENUM_SMS_DATA[0].toString())) {
                  try {
                    String number=progress[newCount].substring(progress[newCount].indexOf("+"));
                    setmsg.setSenderNumber(number);
                  }
 catch (                  Exception ee) {
                    Log.e(TAG,"Error parsing number",ee);
                  }
                }
 else                 if (progress[newCount].contains(DETECTION_PHONENUM_SMS_DATA[2].toString())) {
                  try {
                    String number=progress[newCount].substring(progress[newCount].indexOf("OrigAddr")).replace(DETECTION_PHONENUM_SMS_DATA[2].toString(),"").trim();
                    setmsg.setSenderNumber(number);
                  }
 catch (                  Exception ee) {
                    Log.e(TAG,"Error parsing number:" + ee.getMessage(),ee);
                  }
                }
 else                 if (progress[newCount].contains(DETECTION_PHONENUM_SMS_DATA[1].toString())) {
                  try {
                    String smsData=progress[newCount].substring(progress[newCount].indexOf("'") + 1,progress[newCount].length() - 1);
                    setmsg.setSenderMsg(smsData);
                  }
 catch (                  Exception ee) {
                    Log.e(TAG,"Error parsing SMS data" + ee.getMessage(),ee);
                  }
                }
                newCount++;
              }
            }
            setmsg.setSmsTimestamp(logcat_timestamp);
            setmsg.setSmsType("MWI");
            setmsg.setCurrent_lac(mAimsicdService.getCellTracker().getMonitorCell().getLAC());
            setmsg.setCurrent_cid(mAimsicdService.getCellTracker().getMonitorCell().getCID());
            setmsg.setCurrent_nettype(Device.getNetworkTypeName(mAimsicdService.getCell().getNetType()));
            int isRoaming=0;
            if ("true".equals(mAimsicdService.getCellTracker().getDevice().isRoaming())) {
              isRoaming=1;
            }
            setmsg.setCurrent_roam_status(isRoaming);
            setmsg.setCurrent_gps_lat(mAimsicdService.lastKnownLocation().getLatitudeInDegrees());
            setmsg.setCurrent_gps_lon(mAimsicdService.lastKnownLocation().getLongitudeInDegrees());
            if (!dbacess.isTimeStampInDB(logcat_timestamp)) {
              dbacess.storeCapturedSms(setmsg);
              dbacess.toEventLog(4,"Detected MWI SMS");
              MiscUtils.startPopUpInfo(tContext,7);
            }
 else {
              Log.d(TAG," Detected Sms already logged");
            }
          }
 else           if ("WAPPUSH".equals(SILENT_ONLY_TAGS[index].split("#")[1].trim())) {
            CapturedSmsData setmsg=new CapturedSmsData();
            setmsg.setSenderNumber("unknown");
            setmsg.setSenderMsg("no data");
            int startindex=x - 2;
            int endindex=x + 3;
            if (progress[x + 3].contains("DestPort 0x0B84")) {
              Log.d(TAG,"WAPPUSH DETECTED");
              if (endindex + 3 <= progress.length) {
                while (startindex < endindex) {
                  if (progress[startindex].contains(DETECTION_PHONENUM_SMS_DATA[2].toString())) {
                    try {
                      String number=progress[startindex].substring(progress[startindex].indexOf("OrigAddr")).replace(DETECTION_PHONENUM_SMS_DATA[2].toString(),"").trim();
                      setmsg.setSenderNumber(number);
                      break;
                    }
 catch (                    Exception ee) {
                      Log.e(TAG,"Error parsing number",ee);
                    }
                  }
                  startindex++;
                }
              }
              setmsg.setSmsTimestamp(logcat_timestamp);
              setmsg.setSmsType("WAPPUSH");
              setmsg.setCurrent_lac(mAimsicdService.getCellTracker().getMonitorCell().getLAC());
              setmsg.setCurrent_cid(mAimsicdService.getCellTracker().getMonitorCell().getCID());
              setmsg.setCurrent_nettype(Device.getNetworkTypeName(mAimsicdService.getCell().getNetType()));
              int isRoaming=0;
              if ("true".equals(mAimsicdService.getCellTracker().getDevice().isRoaming())) {
                isRoaming=1;
              }
              setmsg.setCurrent_roam_status(isRoaming);
              setmsg.setCurrent_gps_lat(mAimsicdService.lastKnownLocation().getLatitudeInDegrees());
              setmsg.setCurrent_gps_lon(mAimsicdService.lastKnownLocation().getLongitudeInDegrees());
              if (!dbacess.isTimeStampInDB(logcat_timestamp)) {
                dbacess.storeCapturedSms(setmsg);
                dbacess.toEventLog(5,"Detected WAP PUSH SMS");
                MiscUtils.startPopUpInfo(tContext,8);
              }
 else {
                Log.d(TAG,"Detected Sms already logged");
              }
            }
 else             if (progress[x - 1].contains("SMS originating address:")) {
              Log.i(TAG,"WAPPUSH DETECTED");
              endindex=x + 3;
              startindex=x - 3;
              if (endindex <= progress.length) {
                while (startindex < endindex) {
                  if (progress[startindex].contains("SMS originating address:")) {
                    try {
                      String number=progress[startindex].substring(progress[startindex].indexOf("+"));
                      setmsg.setSenderNumber(number);
                    }
 catch (                    Exception ee) {
                      Log.e(TAG,"Error parsing number " + ee.toString());
                    }
                  }
                  if (progress[startindex].contains("SMS SC address:")) {
                    try {
                      String number=progress[startindex].substring(progress[startindex].indexOf("+"));
                      Log.d(TAG,"Detected msg smsc: " + number);
                    }
 catch (                    Exception ee) {
                      Log.e(TAG,"Error parsing smsc number: " + ee.toString());
                    }
                  }
                  startindex++;
                }
              }
              setmsg.setSmsTimestamp(logcat_timestamp);
              setmsg.setSmsType("WAPPUSH");
              setmsg.setCurrent_lac(mAimsicdService.getCellTracker().getMonitorCell().getLAC());
              setmsg.setCurrent_cid(mAimsicdService.getCellTracker().getMonitorCell().getCID());
              setmsg.setCurrent_nettype(Device.getNetworkTypeName(mAimsicdService.getCell().getNetType()));
              int isRoaming=0;
              if ("true".equals(mAimsicdService.getCellTracker().getDevice().isRoaming())) {
                isRoaming=1;
              }
              setmsg.setCurrent_roam_status(isRoaming);
              setmsg.setCurrent_gps_lat(mAimsicdService.lastKnownLocation().getLatitudeInDegrees());
              setmsg.setCurrent_gps_lon(mAimsicdService.lastKnownLocation().getLongitudeInDegrees());
              if (!dbacess.isTimeStampInDB(logcat_timestamp)) {
                dbacess.storeCapturedSms(setmsg);
                dbacess.toEventLog(6,"Detected WAP PUSH (2) SMS");
                MiscUtils.startPopUpInfo(tContext,8);
              }
 else {
                Log.d(TAG,"Detected SMS already logged");
              }
            }
          }
          break;
        }
      }
    }
  }
}
