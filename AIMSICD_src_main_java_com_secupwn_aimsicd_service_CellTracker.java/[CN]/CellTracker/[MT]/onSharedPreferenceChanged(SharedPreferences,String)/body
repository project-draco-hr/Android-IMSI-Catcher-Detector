{
  final String KEY_UI_ICONS=context.getString(R.string.pref_ui_icons_key);
  final String FEMTO_DETECTION=context.getString(R.string.pref_femto_detection_key);
  final String REFRESH=context.getString(R.string.pref_refresh_key);
  final String OCID_KEY=context.getString(R.string.pref_ocid_key);
  final String VIBRATE_ENABLE=context.getString(R.string.pref_notification_vibrate_enable);
  final String VIBRATE_MIN_LEVEL=context.getString(R.string.pref_notification_vibrate_min_level);
  if (key.equals(KEY_UI_ICONS)) {
    setNotification();
  }
 else   if (key.equals(FEMTO_DETECTION)) {
    boolean trackFemtoPref=sharedPreferences.getBoolean(FEMTO_DETECTION,false);
    if (trackFemtoPref) {
      startTrackingFemto();
    }
 else {
      stopTrackingFemto();
    }
  }
 else   if (key.equals(REFRESH)) {
    String refreshRate=sharedPreferences.getString(REFRESH,"1");
    if (refreshRate.isEmpty()) {
      refreshRate="1";
    }
    int rate=Integer.parseInt(refreshRate);
    long t;
switch (rate) {
case 1:
      t=15L;
    break;
default :
  t=(long)rate;
break;
}
REFRESH_RATE=TimeUnit.SECONDS.toMillis(t);
}
 else if (key.equals(OCID_KEY)) {
getOcidKey();
}
 else if (key.equals(VIBRATE_ENABLE)) {
vibrateEnabled=sharedPreferences.getBoolean(VIBRATE_ENABLE,true);
}
 else if (key.equals(VIBRATE_MIN_LEVEL)) {
vibrateMinThreatLevel=Integer.valueOf(sharedPreferences.getString(VIBRATE_MIN_LEVEL,String.valueOf(Status.MEDIUM.ordinal())));
}
}
