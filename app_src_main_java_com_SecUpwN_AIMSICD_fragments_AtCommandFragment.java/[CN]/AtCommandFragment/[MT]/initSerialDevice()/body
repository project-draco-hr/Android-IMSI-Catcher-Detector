{
  boolean root=RootTools.isAccessGiven();
  if (!root) {
    return ROOT_UNAVAILABLE;
  }
  boolean busybox=RootTools.isBusyboxAvailable();
  if (!busybox) {
    return BUSYBOX_UNAVAILABLE;
  }
  try {
    shell=RootTools.getShell(true);
    mAtResponse.setText("*** Setting Up... Ignore any errors. ***\n");
    mSerialDevices.clear();
    String rilDevice=Helpers.getSystemProp(mContext,"rild.libargs","UNKNOWN");
    mSerialDevice=(rilDevice.equals("UNKNOWN") ? rilDevice : rilDevice.substring(3));
    if (!mSerialDevice.equals("UNKNOWN")) {
      mSerialDevices.add(mSerialDevice);
    }
    CommandCapture cmd=new CommandCapture(0,"\\ls /dev/radio | grep atci*"){
      @Override public void commandOutput(      int id,      String line){
        if (id == 0) {
          if (!line.trim().equals("") && !mSerialDevices.contains("/dev/radio/" + line.trim())) {
            mSerialDevices.add("/dev/radio/" + line.trim());
            mAtResponse.append("Found: " + line.trim());
          }
        }
      }
    }
;
    shell.add(cmd);
    commandWait(shell,cmd);
    File xgold=new File("/system/etc/ril_xgold_radio.cfg");
    if (xgold.exists() && xgold.isFile()) {
      cmd=new CommandCapture(1,"cat /system/etc/ril_xgold_radio.cfg | " + "grep -E \"atport*|dataport*\""){
        @Override public void commandOutput(        int id,        String line){
          if (id == 0) {
            if (!line.trim().equals("") && line.contains("/dev/")) {
              int place=line.indexOf("=") + 1;
              mSerialDevices.add(line.substring(place,line.length() - 1));
              mAtResponse.append(line.substring(place,line.length() - 1));
            }
          }
        }
      }
;
      shell.add(cmd);
      commandWait(shell,cmd);
    }
  }
 catch (  Exception e) {
    Log.e("AIMSICD","initSerialDevice " + e);
  }
  if (!mSerialDevices.isEmpty()) {
    mSerialDevice=mSerialDevices.get(0);
    setSerialDevice();
    String[] entries=new String[mSerialDevices.size()];
    entries=mSerialDevices.toArray(entries);
    ArrayAdapter<String> spinnerAdapter=new ArrayAdapter<>(mContext,android.R.layout.simple_spinner_item,entries);
    mSerialDeviceSpinner.setAdapter(spinnerAdapter);
    mSerialDeviceSpinner.setVisibility(View.VISIBLE);
    mSerialDeviceSpinnerLabel.setVisibility(View.VISIBLE);
  }
  mAtResponse.append("*** Setup Complete ***\n");
  mAtResponse.setVisibility(View.VISIBLE);
  return SERIAL_INIT_OK;
}
