{
  boolean root=Helpers.checkSu();
  if (!root) {
    return ROOT_UNAVAILABLE;
  }
  boolean busybox=Helpers.checkBusybox();
  if (!busybox) {
    return BUSYBOX_UNAVAILABLE;
  }
  if (mShell == null) {
    mShell=new Shell();
  }
  String rilDevice=Helpers.getSystemProp(mContext,"rild.libargs","UNKNOWN");
  mSerialDevice=(rilDevice.equals("UNKNOWN") ? rilDevice : rilDevice.substring(3));
  if (!mSerialDevice.equals("UNKNOWN")) {
    mSerialDevices.add(mSerialDevice);
  }
  boolean result=mShell.sendCommandPreserveOut("ls /dev/radio | grep atci*",mTimeout);
  if (result) {
    mOutput=new ArrayList<>();
    mOutput=mShell.GetStdOut();
    mError=new ArrayList<>();
    mError=mShell.GetStdErr();
  }
  if (mOutput != null) {
    for (    String device : mOutput) {
      mSerialDevices.add("/dev/radio/" + device.trim());
    }
  }
  if (mError != null) {
    for (    String error : mError) {
      mAtResponse.append(error + "\n");
    }
  }
  File xgold=new File("/system/etc/ril_xgold_radio.cfg");
  if (xgold.exists() && xgold.isFile()) {
    result=mShell.sendCommandPreserveOut("cat /system/etc/ril_xgold_radio.cfg | " + "grep -E \"atport*|dataport*\"",mTimeout);
    if (result) {
      mOutput=new ArrayList<>();
      mOutput=mShell.GetStdOut();
      mError=new ArrayList<>();
      mError=mShell.GetStdErr();
    }
  }
  if (mOutput != null) {
    for (    String device : mOutput) {
      if (device.contains("/dev/")) {
        int place=device.indexOf("=") + 1;
        mSerialDevices.add(device.substring(place,device.length() - 1));
      }
    }
  }
  if (mError != null) {
    for (    String error : mError) {
      mAtResponse.append(error + "\n");
    }
  }
  if (!mSerialDevices.isEmpty()) {
    mSerialDevice=mSerialDevices.get(0);
    mShell.setSerialDevice(mSerialDevices.get(0));
    String[] entries=new String[mSerialDevices.size()];
    entries=mSerialDevices.toArray(entries);
    ArrayAdapter<String> spinnerAdapter=new ArrayAdapter<>(mContext,android.R.layout.simple_spinner_item,entries);
    mSerialDeviceSpinner.setAdapter(spinnerAdapter);
    mSerialDeviceSpinner.setVisibility(View.VISIBLE);
    mSerialDeviceSpinnerLabel.setVisibility(View.VISIBLE);
  }
  mAtResponse.setVisibility(View.VISIBLE);
  return SERIAL_INIT_OK;
}
