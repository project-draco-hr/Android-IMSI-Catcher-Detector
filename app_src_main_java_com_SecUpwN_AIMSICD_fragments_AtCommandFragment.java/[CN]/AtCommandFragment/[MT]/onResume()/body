{
  super.onResume();
  int rilInit=initialiseRil();
switch (rilInit) {
case RIL_INIT_OK:
    mAtCommandLayout.setVisibility(View.VISIBLE);
  break;
case ROOT_UNAVAILABLE:
String rootUnavailable="Unable to acquire ROOT access on your device. \n\n" + "AT Command Injection requires ROOT Terminal access. \n\n" + "Please check your device is ROOTED and try again";
mAtCommandError.setText(rootUnavailable);
break;
case BUSYBOX_UNAVAILABLE:
String busyboxUnavailable="Unable to detect Busybox on your device. \n\n" + "AT Command Injection requires Busybox components to function correctly. \n\n" + "Please check your device has Busybox installed and try again";
mAtCommandError.setText(busyboxUnavailable);
break;
case RIL_INIT_ERROR:
String error="An unknown error has occurred trying to acquire the Ril Serial Device.\n\n" + "Please check your logcat for any errors and post them to Github " + "or XDA, links to both of these locations can be found within the "+ "About section of the application.";
mAtCommandError.setText(error);
break;
default :
String unknownError="An unknown error has occurred trying to initialise the AT Command Injector.\n\n" + "Please check your logcat for any errors and post them to Github or " + "XDA, links to both of these locations can be found within the "+ "About section of the application.";
mAtCommandError.setText(unknownError);
break;
}
}
