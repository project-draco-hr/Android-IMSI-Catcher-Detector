{
  if (Helpers.isNetAvailable(context)) {
    if (!"NA".equals(CellTracker.OCID_API_KEY)) {
      double earthRadius=6371.01;
      int radius=2;
      if (Double.doubleToRawLongBits(cell.getLat()) != 0 && Double.doubleToRawLongBits(cell.getLon()) != 0) {
        GeoLocation currentLoc=GeoLocation.fromDegrees(cell.getLat(),cell.getLon());
        GeoLocation[] boundingCoords=currentLoc.boundingCoordinates(radius,earthRadius);
        String boundParameter;
        boundParameter=String.valueOf(boundingCoords[0].getLatitudeInDegrees()) + "," + String.valueOf(boundingCoords[0].getLongitudeInDegrees())+ ","+ String.valueOf(boundingCoords[1].getLatitudeInDegrees())+ ","+ String.valueOf(boundingCoords[1].getLongitudeInDegrees());
        Log.i(TAG,"OCID BBOX is set to: " + boundParameter + "  with radius "+ radius+ " Km.");
        StringBuilder sb=new StringBuilder();
        sb.append("http://www.opencellid.org/cell/getInArea?key=").append(CellTracker.OCID_API_KEY).append("&BBOX=").append(boundParameter);
        Log.i(TAG,"OCID MCC is set to: " + cell.getMCC());
        if (cell.getMCC() != Integer.MAX_VALUE) {
          sb.append("&mcc=").append(cell.getMCC());
        }
        Log.i(TAG,"OCID MNC is set to: " + cell.getMNC());
        if (cell.getMNC() != Integer.MAX_VALUE) {
          sb.append("&mnc=").append(cell.getMNC());
        }
        sb.append("&format=csv");
        new RequestTask(context,type).execute(sb.toString());
      }
    }
 else {
      if (context instanceof MapViewerOsmDroid) {
        ((MapViewerOsmDroid)context).setRefreshActionButtonState(false);
      }
      Helpers.sendMsg(context,context.getString(R.string.no_opencellid_key_detected));
    }
  }
 else {
    if (context instanceof MapViewerOsmDroid) {
      ((MapViewerOsmDroid)context).setRefreshActionButtonState(false);
    }
    final AlertDialog.Builder builder=new AlertDialog.Builder(context);
    builder.setTitle(R.string.no_network_connection_title).setMessage(R.string.no_network_connection_message);
    builder.create().show();
  }
}
