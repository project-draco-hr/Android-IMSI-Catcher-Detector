{
  if (radius < 0d || distance < 0d) {
    throw new IllegalArgumentException();
  }
  double radDist=distance / radius;
  double minLat=radLat - radDist;
  double maxLat=radLat + radDist;
  double minLon, maxLon;
  if (minLat > MIN_LAT && maxLat < MAX_LAT) {
    double deltaLon=Math.asin(Math.sin(radDist) / Math.cos(radLat));
    minLon=radLon - deltaLon;
    if (minLon < MIN_LON) {
      minLon+=2d * Math.PI;
    }
    maxLon=radLon + deltaLon;
    if (maxLon > MAX_LON) {
      maxLon-=2d * Math.PI;
    }
  }
 else {
    minLat=Math.max(minLat,MIN_LAT);
    maxLat=Math.min(maxLat,MAX_LAT);
    minLon=MIN_LON;
    maxLon=MAX_LON;
  }
  return new GeoLocation[]{fromRadians(minLat,minLon),fromRadians(maxLat,maxLon)};
}
