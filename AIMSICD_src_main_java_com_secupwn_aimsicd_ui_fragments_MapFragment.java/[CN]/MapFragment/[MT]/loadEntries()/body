{
  new AsyncTask<Void,Void,GeoPoint>(){
    @Override protected GeoPoint doInBackground(    Void... voids){
      @Cleanup Realm realm=Realm.getDefaultInstance();
      mCellTowerGridMarkerClusterer.getItems().clear();
      loadOcidMarkersByNetwork();
      List<CellTowerMarker> items=new LinkedList<>();
      RealmResults<BaseTransceiverStation> baseStations=realm.where(BaseTransceiverStation.class).findAll();
      if (baseStations.size() > 0) {
        for (        BaseTransceiverStation baseStation : baseStations) {
          if (isCancelled() || !isAdded()) {
            return null;
          }
          final int cellID=baseStation.getCellId();
          final int lac=baseStation.getLocationAreaCode();
          final int mcc=baseStation.getMobileCountryCode();
          final int mnc=baseStation.getMobileNetworkCode();
          final int psc=baseStation.getPrimaryScramblingCode();
          Measure first=realm.where(Measure.class).equalTo("baseStation.cellId",baseStation.getCellId()).findFirst();
          final String rat=first.getRadioAccessTechnology();
          final double dLat=baseStation.getGpsLocation().getLatitude();
          final double dLng=baseStation.getGpsLocation().getLongitude();
          if (Double.doubleToRawLongBits(dLat) == 0 && Double.doubleToRawLongBits(dLng) == 0) {
            continue;
          }
          if (Double.doubleToRawLongBits(dLat) != 0 || Double.doubleToRawLongBits(dLng) != 0) {
            loc=new GeoPoint(dLat,dLng);
            CellTowerMarker ovm=new CellTowerMarker(getActivity(),mMap,"Cell ID: " + cellID,"",loc,new MarkerData(getContext(),String.valueOf(cellID),String.valueOf(loc.getLatitude()),String.valueOf(loc.getLongitude()),String.valueOf(lac),String.valueOf(mcc),String.valueOf(mnc),String.valueOf(psc),rat,"",false));
            ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_blue));
            items.add(ovm);
          }
        }
      }
 else {
        getActivity().runOnUiThread(new Runnable(){
          @Override public void run(){
            Helpers.msgLong(getActivity(),getString(R.string.no_tracked_locations_found));
          }
        }
);
      }
      GeoPoint ret=new GeoPoint(0,0);
      if (mBound) {
        try {
          int mcc=mAimsicdService.getCell().getMobileCountryCode();
          GpsLocation d=mDbHelper.getDefaultLocation(realm,mcc);
          ret=new GeoPoint(d.getLatitude(),d.getLongitude());
        }
 catch (        Exception e) {
          log.error("Error getting default location!",e);
        }
      }
      while (mAimsicdService == null) {
        try {
          if (isCancelled() || !isAdded()) {
            return null;
          }
          Thread.sleep(100);
        }
 catch (        InterruptedException e) {
          log.warn("thread interrupted",e);
        }
      }
      List<Cell> nc=mAimsicdService.getCellTracker().updateNeighboringCells();
      for (      Cell cell : nc) {
        if (isCancelled() || !isAdded()) {
          return null;
        }
        try {
          loc=new GeoPoint(cell.getLat(),cell.getLon());
          CellTowerMarker ovm=new CellTowerMarker(getActivity(),mMap,getString(R.string.cell_id_label) + cell.getCellId(),"",loc,new MarkerData(getContext(),String.valueOf(cell.getCellId()),String.valueOf(loc.getLatitude()),String.valueOf(loc.getLongitude()),String.valueOf(cell.getLocationAreaCode()),String.valueOf(cell.getMobileCountryCode()),String.valueOf(cell.getMobileNetworkCode()),String.valueOf(cell.getPrimaryScramblingCode()),String.valueOf(cell.getRat()),"",false));
          ovm.setIcon(getResources().getDrawable(R.drawable.ic_map_pin_orange));
          items.add(ovm);
        }
 catch (        Exception e) {
          log.error("Error plotting neighboring cells",e);
        }
      }
      mCellTowerGridMarkerClusterer.addAll(items);
      return ret;
    }
    /** 
 * TODO:  We need a manual way to add our own location in case:
 * a) GPS is jammed or not working
 * b) WiFi location is not used
 * c) Default MCC is too far off
 * @param defaultLoc Default location to open map on
 */
    @Override protected void onPostExecute(    GeoPoint defaultLoc){
      if (loc != null && (Double.doubleToRawLongBits(loc.getLatitude()) != 0 && Double.doubleToRawLongBits(loc.getLongitude()) != 0)) {
        mMap.getController().setZoom(16);
        mMap.getController().animateTo(new GeoPoint(loc.getLatitude(),loc.getLongitude()));
      }
 else {
        if (mBound) {
          GeoLocation lastLoc=mAimsicdService.lastKnownLocation();
          if (lastLoc != null) {
            loc=new GeoPoint(lastLoc.getLatitudeInDegrees(),lastLoc.getLongitudeInDegrees());
            mMap.getController().setZoom(16);
            mMap.getController().animateTo(new GeoPoint(loc.getLatitude(),loc.getLongitude()));
          }
 else {
            loc=defaultLoc;
            mMap.getController().setZoom(12);
            mMap.getController().animateTo(new GeoPoint(loc.getLatitude(),loc.getLongitude()));
          }
        }
      }
      if (mCellTowerGridMarkerClusterer != null) {
        if (BuildConfig.DEBUG && mCellTowerGridMarkerClusterer.getItems() != null) {
          log.verbose("CellTowerMarkers.invalidate() markers.size():" + mCellTowerGridMarkerClusterer.getItems().size());
        }
        mCellTowerGridMarkerClusterer.invalidate();
      }
    }
  }
.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
}
