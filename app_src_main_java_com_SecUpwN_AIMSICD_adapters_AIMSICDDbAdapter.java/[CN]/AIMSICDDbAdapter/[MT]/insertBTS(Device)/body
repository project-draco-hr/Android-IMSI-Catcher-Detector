{
  if (!cellInDbiBts(device.mCell.getLAC(),device.mCell.getCID())) {
    ContentValues values=new ContentValues();
    values.put(DBTableColumnIds.DBI_BTS_MCC,device.mCell.getMCC());
    values.put(DBTableColumnIds.DBI_BTS_MNC,device.mCell.getMNC());
    values.put(DBTableColumnIds.DBI_BTS_LAC,device.mCell.getLAC());
    values.put(DBTableColumnIds.DBI_BTS_CID,device.mCell.getCID());
    values.put(DBTableColumnIds.DBI_BTS_PSC,device.mCell.getPSC());
    values.put(DBTableColumnIds.DBI_BTS_TIME_FIRST,String.valueOf(System.currentTimeMillis()));
    values.put(DBTableColumnIds.DBI_BTS_TIME_LAST,String.valueOf(System.currentTimeMillis()));
    values.put(DBTableColumnIds.DBI_BTS_LAT,device.mCell.getLat());
    values.put(DBTableColumnIds.DBI_BTS_LON,device.mCell.getLon());
    mDb.insert(DBTableColumnIds.DBI_BTS_TABLE_NAME,null,values);
    Log.i(mTAG,"DBi_bts inserted");
  }
 else {
    ContentValues values=new ContentValues();
    values.put(DBTableColumnIds.DBI_BTS_TIME_LAST,String.valueOf(System.currentTimeMillis()));
    if (device.mCell.getLat() != 0.0 && device.mCell.getLat() != 0 && device.mCell.getLon() != 0.0 && device.mCell.getLon() != 0) {
      values.put(DBTableColumnIds.DBI_BTS_LAT,device.mCell.getLat());
      values.put(DBTableColumnIds.DBI_BTS_LON,device.mCell.getLon());
    }
    mDb.update(DBTableColumnIds.DBI_BTS_TABLE_NAME,values,"CID=?",new String[]{Integer.toString(device.mCell.getCID())});
    Log.i(mTAG,"DBi_bts Updated Cid=" + device.mCell.getCID() + " Lac="+ device.mCell.getLAC());
  }
  if (!cellInDbiMeasure(device.mCell.getCID())) {
    ContentValues dbiMeasure=new ContentValues();
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_BTS_ID,device.mCell.getCID());
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_NC_LIST,"no_data");
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_TIME,String.valueOf(System.currentTimeMillis()));
    String slat=String.valueOf(device.mCell.getLat());
    String slon=String.valueOf(device.mCell.getLon());
    if (slat == null) {
      slat="0.0";
    }
    if (slon == null) {
      slat="0.0";
    }
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_LAT,slat);
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_LON,slon);
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_ACCURACY,device.mCell.getAccuracy());
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_BB_POWER,String.valueOf(device.mCell.getDBM()));
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_TX_POWER,String.valueOf(device.mCell.getRssi()));
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_RX_SIGNAL,String.valueOf(device.mCell.getRssi()));
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_RAT,String.valueOf(device.mCell.getNetType()));
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_TA,device.mCell.getTimingAdvance());
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_BER,0);
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_IS_SUBMITTED,0);
    dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_IS_NEIGHBOUR,0);
    mDb.insert(DBTableColumnIds.DBI_MEASURE_TABLE_NAME,null,dbiMeasure);
    Log.i(mTAG,"DBi_measure inserted bts_id=" + device.mCell.getCID());
  }
 else {
    ContentValues dbiMeasure=new ContentValues();
    if (device.mCell.getLat() != 0.0 && device.mCell.getLon() != 0.0) {
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_LAT,device.mCell.getLat());
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_LON,device.mCell.getLon());
    }
    if (device.mCell.getAccuracy() != 0.0 && device.mCell.getAccuracy() > 0) {
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_GPSD_ACCURACY,device.mCell.getAccuracy());
    }
    if (device.mCell.getDBM() > 0) {
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_BB_POWER,String.valueOf(device.mCell.getDBM()));
    }
    if (device.mCell.getRssi() > 0) {
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_TX_POWER,String.valueOf(device.mCell.getRssi()));
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_RX_SIGNAL,String.valueOf(device.mCell.getRssi()));
    }
    if (device.mCell.getTimingAdvance() > 0) {
      dbiMeasure.put(DBTableColumnIds.DBI_MEASURE_TA,device.mCell.getTimingAdvance());
    }
    mDb.update(DBTableColumnIds.DBI_MEASURE_TABLE_NAME,dbiMeasure,"bts_id=?",new String[]{Integer.toString(device.mCell.getCID())});
    Log.i(mTAG,"DBi_measure updated bts_id=" + device.mCell.getCID());
  }
}
