{
  String fileName=mContext.getExternalFilesDir(null) + File.separator + "OpenCellID/opencellid.csv";
  File file=new File(fileName);
  try {
    if (file.exists()) {
      CSVReader csvReader=new CSVReader(new FileReader(file));
      List<String[]> csvCellID=new ArrayList<>();
      String next[];
      AIMSICD.mProgressBar.setProgress(0);
      AIMSICD.mProgressBar.setMax(4);
      AIMSICD.mProgressBar.setProgress(1);
      while ((next=csvReader.readNext()) != null) {
        csvCellID.add(next);
      }
      AIMSICD.mProgressBar.setProgress(2);
      if (!csvCellID.isEmpty()) {
        int lines=csvCellID.size();
        Log.i(TAG,"UpdateOpenCellID: OCID CSV size (lines): " + lines);
        Cursor lCursor=mDb.rawQuery("SELECT CID, COUNT(CID) FROM DBe_import GROUP BY CID",null);
        SparseArray<Boolean> lPresentCellID=new SparseArray<>();
        if (lCursor.getCount() > 0) {
          while (lCursor.moveToNext()) {
            lPresentCellID.put(lCursor.getInt(0),true);
          }
        }
        lCursor.close();
        AIMSICD.mProgressBar.setProgress(3);
        AIMSICD.mProgressBar.setMax(lines);
        int rowCounter;
        for (rowCounter=1; rowCounter < lines; rowCounter++) {
          if (lPresentCellID.get(Integer.parseInt(csvCellID.get(rowCounter)[5]),false)) {
            continue;
          }
          String lat=csvCellID.get(rowCounter)[0], lon=csvCellID.get(rowCounter)[1], mcc=csvCellID.get(rowCounter)[2], mnc=csvCellID.get(rowCounter)[3], lac=csvCellID.get(rowCounter)[4], cellid=csvCellID.get(rowCounter)[5], range=csvCellID.get(rowCounter)[6], avg_sig=csvCellID.get(rowCounter)[7], samples=csvCellID.get(rowCounter)[8], change=csvCellID.get(rowCounter)[9], radio=csvCellID.get(rowCounter)[10], rnc=csvCellID.get(rowCounter)[11], cid=csvCellID.get(rowCounter)[12], psc=csvCellID.get(rowCounter)[13];
          int iPsc=0;
          if (psc != null && !psc.isEmpty()) {
            iPsc=Integer.parseInt(psc);
          }
          int ichange=Integer.parseInt(change);
          ichange=(ichange == 0 ? 1 : 0);
          insertDBeImport("OCID",radio,Integer.parseInt(mcc),Integer.parseInt(mnc),Integer.parseInt(lac),Integer.parseInt(cellid),iPsc,lat,lon,ichange,Integer.parseInt(avg_sig),Integer.parseInt(range),Integer.parseInt(samples),"n/a","n/a",0);
        }
        AIMSICD.mProgressBar.setProgress(4);
        Log.d(TAG,"PopulateDBeImport(): inserted " + rowCounter + " cells.");
      }
    }
 else {
      Log.e(TAG,"Opencellid.csv file does not exist!");
    }
    return true;
  }
 catch (  Exception e) {
    Log.e(TAG,"Error parsing OpenCellID data: " + e.getMessage());
    return false;
  }
 finally {
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ex) {
      Thread.currentThread().interrupt();
    }
    AIMSICD.mProgressBar.setProgress(0);
  }
}
