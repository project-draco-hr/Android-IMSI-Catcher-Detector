{
  mIMEI=tm.getDeviceId();
  mIMEIV=tm.getDeviceSoftwareVersion();
  mPhoneID=tm.getPhoneType();
  mRoaming=tm.isNetworkRoaming();
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
    mNetType=getNetworkTypeName();
    DeviceApi17.loadCellInfo(tm,mCell);
  }
  if (mCell == null)   mCell=new Cell();
switch (mPhoneID) {
case TelephonyManager.PHONE_TYPE_GSM:
    mPhoneType="GSM";
  mMncmcc=tm.getNetworkOperator();
if (mMncmcc != null && mMncmcc.length() >= 5) {
  try {
    if (mCell.getMCC() == Integer.MAX_VALUE)     mCell.setMCC(Integer.parseInt(tm.getNetworkOperator().substring(0,3)));
    if (mCell.getMNC() == Integer.MAX_VALUE)     mCell.setMNC(Integer.parseInt(tm.getNetworkOperator().substring(3,5)));
  }
 catch (  Exception e) {
    Log.i(TAG,"MncMcc parse exception - " + e.getMessage());
  }
}
mNetName=tm.getNetworkOperatorName();
if (!mCell.isValid()) {
GsmCellLocation gsmCellLocation=(GsmCellLocation)tm.getCellLocation();
if (gsmCellLocation != null) {
mCell.setCID(gsmCellLocation.getCid());
mCell.setLAC(gsmCellLocation.getLac());
mCell.setPSC(gsmCellLocation.getPsc());
}
}
break;
case TelephonyManager.PHONE_TYPE_CDMA:
mPhoneType="CDMA";
if (!mCell.isValid()) {
CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)tm.getCellLocation();
if (cdmaCellLocation != null) {
mCell.setCID(cdmaCellLocation.getBaseStationId());
mCell.setLAC(cdmaCellLocation.getNetworkId());
mCell.setSID(cdmaCellLocation.getSystemId());
mCell.setMNC(cdmaCellLocation.getSystemId());
String homeOperator=Helpers.getSystemProp(context,"ro.cdma.home.operator.numeric","UNKNOWN");
if (!homeOperator.contains("UNKNOWN")) {
if (mCell.getMCC() == Integer.MAX_VALUE) mCell.setMCC(Integer.valueOf(homeOperator.substring(0,3)));
if (mCell.getMNC() == Integer.MAX_VALUE) mCell.setMNC(Integer.valueOf(homeOperator.substring(3,5)));
}
}
}
break;
}
int simState=tm.getSimState();
switch (simState) {
case (TelephonyManager.SIM_STATE_ABSENT):
break;
case (TelephonyManager.SIM_STATE_NETWORK_LOCKED):
break;
case (TelephonyManager.SIM_STATE_PIN_REQUIRED):
break;
case (TelephonyManager.SIM_STATE_PUK_REQUIRED):
break;
case (TelephonyManager.SIM_STATE_UNKNOWN):
break;
case (TelephonyManager.SIM_STATE_READY):
{
mSimCountry=getSimCountry(tm);
mSimOperator=getSimOperator(tm);
mSimOperatorName=getSimOperatorName(tm);
mSimSerial=getSimSerial(tm);
mSimSubs=getSimSubs(tm);
}
}
mDataActivityType=getDataActivity(tm);
mDataState=getDataState(tm);
}
