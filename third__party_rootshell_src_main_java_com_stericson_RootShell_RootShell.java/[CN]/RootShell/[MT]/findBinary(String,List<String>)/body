{
  final List<String> foundPaths=new ArrayList<String>();
  boolean found=false;
  if (searchPaths == null) {
    searchPaths=RootShell.getPath();
  }
  RootShell.log("Checking for " + binaryName);
  try {
    for (    String path : searchPaths) {
      if (!path.endsWith("/")) {
        path+="/";
      }
      final String currentPath=path;
      Command cc=new Command(0,false,"stat " + path + binaryName){
        @Override public void commandOutput(        int id,        String line){
          if (line.contains("File: ") && line.contains(binaryName)) {
            foundPaths.add(currentPath);
            RootShell.log(binaryName + " was found here: " + currentPath);
          }
          RootShell.log(line);
          super.commandOutput(id,line);
        }
      }
;
      RootShell.getShell(false).add(cc);
      commandWait(RootShell.getShell(false),cc);
    }
    found=!foundPaths.isEmpty();
  }
 catch (  Exception e) {
    RootShell.log(binaryName + " was not found, more information MAY be available with Debugging on.");
  }
  if (!found) {
    RootShell.log("Trying second method");
    for (    String path : searchPaths) {
      if (!path.endsWith("/")) {
        path+="/";
      }
      if (RootShell.exists(path + binaryName)) {
        RootShell.log(binaryName + " was found here: " + path);
        foundPaths.add(path);
      }
 else {
        RootShell.log(binaryName + " was NOT found here: " + path);
      }
    }
  }
  Collections.reverse(foundPaths);
  return foundPaths;
}
