{
  String tickerText;
  String contentText="Phone Type " + mDevice.getPhoneType();
  if (mFemtoDetected || mTypeZeroSmsDetected) {
    Status.setCurrentStatus(Status.Type.ALARM,this.uniqueContext);
  }
 else   if (mChangedLAC) {
    Status.setCurrentStatus(Status.Type.MEDIUM,this.uniqueContext);
    contentText="Hostile Service Area: Changing LAC Detected!";
  }
 else   if (mCellIdNotInOpenDb) {
    Status.setCurrentStatus(Status.Type.MEDIUM,this.uniqueContext);
    contentText="Cell ID does not exist in OpenCellID Database!";
  }
 else   if (mTrackingFemtocell || mTrackingCell || mMonitoringCell) {
    Status.setCurrentStatus(Status.Type.NORMAL,this.uniqueContext);
    if (mTrackingFemtocell) {
      contentText="FemtoCell Detection Active.";
    }
 else     if (mTrackingCell) {
      contentText="Cell Tracking Active.";
    }
 else {
      contentText="Cell Monitoring Active.";
    }
  }
 else {
    Status.setCurrentStatus(Status.Type.IDLE,this.uniqueContext);
  }
switch (Status.getStatus()) {
case IDLE:
    contentText="Phone Type " + mDevice.getPhoneType();
  tickerText=uniqueContext.getResources().getString(R.string.app_name_short) + " - Status: Idle.";
break;
case NORMAL:
tickerText=uniqueContext.getResources().getString(R.string.app_name_short) + " - Status: Good. No Threats Detected.";
break;
case MEDIUM:
tickerText=uniqueContext.getResources().getString(R.string.app_name_short);
if (mChangedLAC) {
tickerText+=" - Hostile Service Area: Changing LAC Detected!";
contentText="Hostile Service Area: Changing LAC Detected!";
}
 else if (mCellIdNotInOpenDb) {
tickerText+=" - Cell ID does not exist in OpenCellID Database!";
contentText="Cell ID does not exist in OpenCellID Database!";
}
break;
case ALARM:
tickerText=uniqueContext.getResources().getString(R.string.app_name_short) + " - ALERT: Some Threat Detected!";
if (mFemtoDetected) {
contentText="ALERT: FemtoCell Connection Detected!";
}
 else if (mTypeZeroSmsDetected) {
contentText="ALERT: Type-0 Silent SMS Intercepted!";
}
break;
default :
tickerText=uniqueContext.getResources().getString(R.string.app_name);
break;
}
Intent notificationIntent=new Intent(uniqueContext,AIMSICD.class);
notificationIntent.putExtra("silent_sms",mTypeZeroSmsDetected);
notificationIntent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_FROM_BACKGROUND);
PendingIntent contentIntent=PendingIntent.getActivity(uniqueContext,NOTIFICATION_ID,notificationIntent,PendingIntent.FLAG_CANCEL_CURRENT);
String iconType=prefs.getString(uniqueContext.getString(R.string.pref_ui_icons_key),"SENSE").toUpperCase();
Notification mBuilder=new NotificationCompat.Builder(uniqueContext).setSmallIcon(Icon.getIcon(Icon.Type.valueOf(iconType))).setTicker(tickerText).setContentTitle(uniqueContext.getResources().getString(R.string.app_name)).setContentText(contentText).setOngoing(true).setAutoCancel(false).setContentIntent(contentIntent).build();
NotificationManager mNotificationManager=(NotificationManager)uniqueContext.getSystemService(Context.NOTIFICATION_SERVICE);
mNotificationManager.notify(NOTIFICATION_ID,mBuilder);
}
