{
  boolean trackFemtoPref=prefs.getBoolean(context.getString(R.string.pref_femto_detection_key),false);
  boolean trackCellPref=prefs.getBoolean(context.getString(R.string.pref_enable_cell_key),true);
  boolean monitorCellPref=prefs.getBoolean(context.getString(R.string.pref_enable_cell_monitoring_key),true);
  LAST_DB_BACKUP_VERSION=prefs.getInt(context.getString(R.string.pref_last_database_backup_version),1);
  CELL_TABLE_CLEANSED=prefs.getBoolean(context.getString(R.string.pref_cell_table_cleansed),false);
  String refreshRate=prefs.getString(context.getString(R.string.pref_refresh_key),"1");
  this.mVibrateEnabled=prefs.getBoolean(context.getString(R.string.pref_notification_vibrate_enable),true);
  this.mVibrateMinThreatLevel=Integer.valueOf(prefs.getString(context.getString(R.string.pref_notification_vibrate_min_level),String.valueOf(Status.Type.MEDIUM.level)));
  if (refreshRate.isEmpty()) {
    refreshRate="1";
  }
  int rate=Integer.parseInt(refreshRate);
  long t;
  if (rate == 1) {
    t=15L;
  }
 else {
    t=((long)rate);
  }
  REFRESH_RATE=TimeUnit.SECONDS.toMillis(t);
  getOcidKey();
  if (trackFemtoPref) {
    startTrackingFemto();
  }
  if (trackCellPref) {
    setCellTracking(true);
  }
  if (monitorCellPref) {
    setCellMonitoring(true);
  }
}
