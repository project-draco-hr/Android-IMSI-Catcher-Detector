{
  final String KEY_UI_ICONS=context.getString(R.string.pref_ui_icons_key);
  final String FEMTO_DETECTION=context.getString(R.string.pref_femto_detection_key);
  final String REFRESH=context.getString(R.string.pref_refresh_key);
  final String DB_VERSION=context.getString(R.string.pref_last_database_backup_version);
  final String OCID_UPLOAD=context.getString(R.string.pref_ocid_upload);
  final String OCID_KEY=context.getString(R.string.pref_ocid_key);
  if (key.equals(KEY_UI_ICONS)) {
    setNotification();
  }
 else   if (key.equals(FEMTO_DETECTION)) {
    boolean trackFemtoPref=sharedPreferences.getBoolean(FEMTO_DETECTION,false);
    if (trackFemtoPref) {
      startTrackingFemto();
    }
 else {
      stopTrackingFemto();
    }
  }
 else   if (key.equals(REFRESH)) {
    String refreshRate=sharedPreferences.getString(REFRESH,"1");
    if (refreshRate.isEmpty()) {
      refreshRate="1";
    }
    int rate=Integer.parseInt(refreshRate);
    long t;
switch (rate) {
case 1:
      t=15L;
    break;
default :
  t=(rate * 1L);
break;
}
REFRESH_RATE=TimeUnit.SECONDS.toMillis(t);
}
 else if (key.equals(DB_VERSION)) {
LAST_DB_BACKUP_VERSION=sharedPreferences.getInt(DB_VERSION,1);
}
 else if (key.equals(OCID_UPLOAD)) {
OCID_UPLOAD_PREF=sharedPreferences.getBoolean(OCID_UPLOAD,false);
}
 else if (key.equals(OCID_KEY)) {
getOcidKey();
}
}
