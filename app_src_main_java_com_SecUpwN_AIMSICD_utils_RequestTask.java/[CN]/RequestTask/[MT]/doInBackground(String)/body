{
switch (mType) {
case DBE_DOWNLOAD_REQUEST:
case DBE_DOWNLOAD_REQUEST_FROM_MAP:
    int count;
  try {
    int total;
    int progress=0;
    File dir=new File(Environment.getExternalStorageDirectory() + "/AIMSICD/OpenCellID/");
    if (!dir.exists()) {
      dir.mkdirs();
    }
    File file=new File(dir,"opencellid.csv");
    URL url=new URL(commandString[0]);
    HttpURLConnection urlConnection=(HttpURLConnection)url.openConnection();
    urlConnection.setRequestMethod("GET");
    urlConnection.setConnectTimeout(20000);
    urlConnection.setReadTimeout(20000);
    urlConnection.setDoInput(true);
    urlConnection.connect();
    if (urlConnection.getResponseCode() != 200) {
      try {
        String error=Helpers.convertStreamToString(urlConnection.getErrorStream());
        Helpers.msgLong(mContext,"Download error: " + error);
        Log.e("AIMSICD","Download OCID data error: " + error);
      }
 catch (      Exception e) {
        Helpers.msgLong(mContext,"Download error: " + e.getClass().getName() + " - "+ e.getMessage());
        Log.e("AIMSICD","Download OCID - " + e);
      }
      return "Error";
    }
 else {
      total=urlConnection.getContentLength();
      publishProgress(progress,total);
      FileOutputStream output=new FileOutputStream(file,false);
      InputStream input=new BufferedInputStream(urlConnection.getInputStream());
      byte[] data=new byte[1024];
      while ((count=input.read(data)) > 0) {
        output.write(data,0,count);
        progress+=count;
        publishProgress(progress,total);
      }
      output.flush();
      output.close();
    }
    urlConnection.disconnect();
    return "Successful";
  }
 catch (  MalformedURLException e) {
    return null;
  }
catch (  IOException e) {
    return null;
  }
case BACKUP_DATABASE:
mDbAdapter.open();
if (mDbAdapter.backupDB()) {
mDbAdapter.close();
return "Successful";
}
mDbAdapter.close();
return null;
case RESTORE_DATABASE:
mDbAdapter.open();
if (mDbAdapter.restoreDB()) {
mDbAdapter.close();
return "Successful";
}
mDbAdapter.close();
return null;
}
return null;
}
