{
  SmsDetectionDbAccess dbaccess=new SmsDetectionDbAccess(con);
  BufferedReader reader=null;
  StringBuilder json_file=new StringBuilder();
  try {
    reader=new BufferedReader(new InputStreamReader(con.getAssets().open("det_strings.json")));
    String rline=reader.readLine();
    while (rline != null) {
      json_file.append(rline);
      rline=reader.readLine();
    }
    Log.i(TAG,mTAG + ": refreshDetectionDbStrings: " + json_file.toString());
  }
 catch (  Exception ee) {
    ee.printStackTrace();
  }
 finally {
    if (reader != null) {
      try {
        reader.close();
      }
 catch (      Exception ee) {
        ee.printStackTrace();
      }
    }
  }
  JSONObject json_response;
  try {
    json_response=new JSONObject(json_file.toString());
    JSONArray json_array_node=json_response.optJSONArray("load_detection_strings");
    int json_array_len=json_array_node.length();
    dbaccess.open();
    for (int i=0; i < json_array_len; i++) {
      JSONObject current_json_object=json_array_node.getJSONObject(i);
      ContentValues store_new_det_string=new ContentValues();
      store_new_det_string.put(SmsDetectionDbHelper.SILENT_SMS_STRING_COLUMN,current_json_object.optString("detection_string"));
      store_new_det_string.put(SmsDetectionDbHelper.SILENT_SMS_TYPE_COLUMN,current_json_object.optString("detection_type"));
      if (dbaccess.insertNewDetectionString(store_new_det_string)) {
        Log.i(TAG,mTAG + ": refreshDetectionDbStrings: New string added!");
      }
    }
    dbaccess.close();
  }
 catch (  JSONException e) {
    dbaccess.close();
    Log.e(TAG,mTAG + ": refreshDetectionDbStrings: " + "Error parsing JsonFile "+ e.toString());
    e.printStackTrace();
  }
}
