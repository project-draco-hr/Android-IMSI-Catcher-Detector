{
  tm=(TelephonyManager)mContext.getSystemService(Context.TELEPHONY_SERVICE);
  sIMEI=tm.getDeviceId();
  sIMEIV=tm.getDeviceSoftwareVersion();
  sPhoneNum=tm.getLine1Number();
  sPhoneID=tm.getPhoneType();
switch (sPhoneID) {
case TelephonyManager.PHONE_TYPE_GSM:
    sPhoneType="GSM";
  sMmcmcc=tm.getNetworkOperator();
sNetName=tm.getNetworkOperatorName();
GsmCellLocation gsmCellLocation=(GsmCellLocation)tm.getCellLocation();
if (gsmCellLocation != null) {
sCellType="" + gsmCellLocation.getCid();
sLac="" + gsmCellLocation.getLac();
}
sSimCountry=tm.getSimCountryIso();
sSimOperator=tm.getSimOperator();
sSimOperatorName=tm.getSimOperatorName();
sSimSerial=tm.getSimSerialNumber();
sSimSubs=tm.getSubscriberId();
break;
case TelephonyManager.PHONE_TYPE_CDMA:
sPhoneType="CDMA";
break;
}
sNetID=tm.getNetworkType();
switch (sNetID) {
case TelephonyManager.NETWORK_TYPE_UNKNOWN:
sNetType="Unknown";
break;
case TelephonyManager.NETWORK_TYPE_GPRS:
sNetType="GPRS";
break;
case TelephonyManager.NETWORK_TYPE_EDGE:
sNetType="EDGE";
break;
case TelephonyManager.NETWORK_TYPE_UMTS:
sNetType="UMTS";
break;
case TelephonyManager.NETWORK_TYPE_HSDPA:
sNetType="HSPA";
break;
case TelephonyManager.NETWORK_TYPE_HSUPA:
sNetType="HDSPA";
break;
case TelephonyManager.NETWORK_TYPE_HSPA:
sNetType="HUSPA";
break;
case TelephonyManager.NETWORK_TYPE_CDMA:
sNetType="CDMA";
break;
case TelephonyManager.NETWORK_TYPE_EVDO_0:
sNetType="EVDO_0";
break;
case TelephonyManager.NETWORK_TYPE_EVDO_A:
sNetType="EVDO_A";
break;
case TelephonyManager.NETWORK_TYPE_1xRTT:
sNetType="1xRTT";
break;
default :
sNetType="Unknown";
break;
}
sDataActivity=tm.getDataActivity();
sDataActivityType="undef";
switch (sDataActivity) {
case TelephonyManager.DATA_ACTIVITY_NONE:
sDataActivityType="None";
break;
case TelephonyManager.DATA_ACTIVITY_IN:
sDataActivityType="In";
break;
case TelephonyManager.DATA_ACTIVITY_OUT:
sDataActivityType="Out";
break;
case TelephonyManager.DATA_ACTIVITY_INOUT:
sDataActivityType="In-Out";
break;
case TelephonyManager.DATA_ACTIVITY_DORMANT:
sDataActivityType="Dormant";
break;
}
sDataActivity=tm.getDataState();
sDataState="undef";
switch (sDataActivity) {
case TelephonyManager.DATA_DISCONNECTED:
sDataActivityType="Disconnected";
break;
case TelephonyManager.DATA_CONNECTING:
sDataActivityType="Connecting";
break;
case TelephonyManager.DATA_CONNECTED:
sDataActivityType="Connected";
break;
case TelephonyManager.DATA_SUSPENDED:
sDataActivityType="Suspended";
break;
}
dbHelper=new MySQLiteHelper(mContext);
sDB=dbHelper.getWritableDatabase();
sSignalListenerLocation=new PhoneStateListener(){
public void onCellLocationChanged(CellLocation location){
sNetID=tm.getNetworkType();
switch (sNetID) {
case TelephonyManager.NETWORK_TYPE_UNKNOWN:
sNetType="Unknown";
break;
case TelephonyManager.NETWORK_TYPE_GPRS:
sNetType="GPRS";
break;
case TelephonyManager.NETWORK_TYPE_EDGE:
sNetType="EDGE";
break;
case TelephonyManager.NETWORK_TYPE_UMTS:
sNetType="UMTS";
break;
case TelephonyManager.NETWORK_TYPE_HSDPA:
sNetType="HDSPA";
break;
case TelephonyManager.NETWORK_TYPE_HSUPA:
sNetType="HSUPA";
break;
case TelephonyManager.NETWORK_TYPE_HSPA:
sNetType="HSPA";
break;
case TelephonyManager.NETWORK_TYPE_CDMA:
sNetType="CDMA";
break;
case TelephonyManager.NETWORK_TYPE_EVDO_0:
sNetType="EVDO_0";
break;
case TelephonyManager.NETWORK_TYPE_EVDO_A:
sNetType="EVDO_A";
break;
case TelephonyManager.NETWORK_TYPE_1xRTT:
sNetType="1xRTT";
break;
default :
sNetType="Unknown";
break;
}
int dataActivityType=tm.getDataActivity();
String dataActivity="un";
switch (dataActivityType) {
case TelephonyManager.DATA_ACTIVITY_NONE:
dataActivity="No";
break;
case TelephonyManager.DATA_ACTIVITY_IN:
dataActivity="In";
break;
case TelephonyManager.DATA_ACTIVITY_OUT:
dataActivity="Ou";
break;
case TelephonyManager.DATA_ACTIVITY_INOUT:
dataActivity="IO";
break;
case TelephonyManager.DATA_ACTIVITY_DORMANT:
dataActivity="Do";
break;
}
int dataType=tm.getDataState();
String dataState="un";
switch (dataType) {
case TelephonyManager.DATA_DISCONNECTED:
dataState="Di";
break;
case TelephonyManager.DATA_CONNECTING:
dataState="Ct";
break;
case TelephonyManager.DATA_CONNECTED:
dataState="Cd";
break;
case TelephonyManager.DATA_SUSPENDED:
dataState="Su";
break;
}
switch (sPhoneID) {
case TelephonyManager.PHONE_TYPE_GSM:
GsmCellLocation gsmCellLocation=(GsmCellLocation)location;
if (gsmCellLocation != null) {
sCellInfo=gsmCellLocation.toString() + dataActivity + "|"+ dataState+ "|"+ sNetType+ "|";
sLacID=gsmCellLocation.getLac();
sCellID=gsmCellLocation.getCid();
if (isTrackingCell() && !dbHelper.cellExists(sCellID)) {
sSimCountry=getSimCountry(true);
sSimOperator=getSimOperator(true);
sSimOperatorName=getSimOperatorName(true);
dbHelper.insertCell(sDB,sLacID,sCellID,sNetID,sLatitude,sLongitude,sSignalInfo,sCellInfo,sSimCountry,sSimOperator,sSimOperatorName);
}
kmlpoints(sLacID,sCellID,sCellInfo,sLongitude,sLatitude);
}
break;
case TelephonyManager.PHONE_TYPE_CDMA:
CdmaCellLocation cdmaCellLocation=(CdmaCellLocation)location;
if (cdmaCellLocation != null) {
sCellInfo=cdmaCellLocation.toString() + dataActivity + "|"+ dataState+ "|"+ sNetType+ "|";
sLacID=cdmaCellLocation.getNetworkId();
sCellID=cdmaCellLocation.getBaseStationId();
if (isTrackingCell() && !dbHelper.cellExists(sCellID)) {
sSimCountry=getSimCountry(true);
sSimOperator=getSimOperator(true);
sSimOperatorName=getNetworkName(true);
}
kmlpoints(sLacID,sCellID,sCellInfo,sLongitude,sLatitude);
}
}
if (TrackingLocation) {
dbHelper.insertLocation(sDB,sLacID,sCellID,sNetID,sLatitude,sLongitude,sSignalInfo,sCellInfo);
}
if (TrackingCell && !dbHelper.cellExists(sCellID)) {
dbHelper.insertCell(sDB,sLacID,sCellID,sNetID,sLatitude,sLongitude,sSignalInfo,sCellInfo,sSimCountry,sSimOperator,sSimOperatorName);
}
}
}
;
sSignalListenerStrength=new PhoneStateListener(){
public void onSignalStrengthsChanged(SignalStrength signalStrength){
switch (sPhoneID) {
case TelephonyManager.PHONE_TYPE_GSM:
sSignalInfo=signalStrength.getGsmSignalStrength();
break;
case TelephonyManager.PHONE_TYPE_CDMA:
sSignalInfo=signalStrength.getCdmaDbm();
break;
default :
sSignalInfo=0;
}
kmlpoints(sLacID,sCellID,sCellInfo,sLongitude,sLatitude);
if (TrackingSignal) {
dbHelper.insertSignal(sDB,sLacID,sCellID,sNetID,sLatitude,sLongitude,sSignalInfo,sCellInfo);
}
}
}
;
}
