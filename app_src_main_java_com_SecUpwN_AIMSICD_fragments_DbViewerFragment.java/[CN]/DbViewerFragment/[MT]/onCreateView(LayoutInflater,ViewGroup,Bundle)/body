{
  View view=inflater.inflate(R.layout.db_view,container,false);
  lv=(ListView)view.findViewById(R.id.list_view);
  emptyView=view.findViewById(R.id.db_list_empty);
  tblSpinner=(Spinner)view.findViewById(R.id.table_spinner);
  DbViewerSpinnerAdapter mSpinnerAdapter=new DbViewerSpinnerAdapter(getActivity(),R.layout.item_spinner_db_viewer);
  tblSpinner.setAdapter(mSpinnerAdapter);
  Spinner spnLocale=(Spinner)view.findViewById(R.id.table_spinner);
  spnLocale.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parentView,    View selectedItemView,    final int position,    long id){
      new AsyncTask<Void,Void,BaseInflaterAdapter>(){
        @Override protected BaseInflaterAdapter doInBackground(        Void... params){
          mDb.open();
          Cursor result;
          mTableSelected=(StatesDbViewer)tblSpinner.getSelectedItem();
switch (position) {
case 0:
            result=mDb.getCellData();
          break;
case 1:
        result=mDb.getLocationData();
      break;
case 2:
    result=mDb.getOpenCellIDData();
  break;
case 3:
result=mDb.getDefaultMccLocationData();
break;
case 4:
result=smsdetection_db.returnDetectedSmsData();
break;
case 5:
result=mDb.getSignalStrengthMeasurementData();
break;
case 6:
result=mDb.getEventLogData();
break;
case 7:
result=smsdetection_db.getDetectionStringCursor();
break;
default :
throw new IllegalArgumentException("Unknown type of table");
}
BaseInflaterAdapter adapter=null;
if (result != null) {
adapter=BuildTable(result);
}
mDb.close();
return adapter;
}
@Override protected void onPostExecute(BaseInflaterAdapter adapter){
if (getActivity() == null) return;
lv.setEmptyView(emptyView);
if (adapter != null) {
lv.setAdapter(adapter);
lv.setVisibility(View.VISIBLE);
}
 else {
lv.setVisibility(View.GONE);
emptyView.setVisibility(View.VISIBLE);
}
getActivity().setProgressBarIndeterminateVisibility(false);
}
}
.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
}
@Override public void onNothingSelected(AdapterView<?> parentView){
return;
}
}
);
return view;
}
