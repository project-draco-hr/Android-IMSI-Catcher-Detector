{
  if (tableData != null && tableData.getCount() > 0) {
switch (mTableSelected) {
case IMPORTED_OCID_DATA:
{
        BaseInflaterAdapter<CardItemData> adapter=new BaseInflaterAdapter<>(new OpenCellIdCardInflater());
        int count=tableData.getCount();
        while (tableData.moveToNext()) {
          CardItemData data=new CardItemData("CID: " + tableData.getString(0),"LAC: " + tableData.getString(1),"MCC: " + tableData.getString(2),"MNC: " + tableData.getString(3),"Lat: " + tableData.getString(4),"Lon: " + tableData.getString(5),"AvgSignal: " + tableData.getString(6),"Samples: " + tableData.getString(7),"" + (tableData.getPosition() + 1) + " / "+ count);
          adapter.addItem(data,false);
        }
        if (!tableData.isClosed()) {
          tableData.close();
        }
        return adapter;
      }
case DEFAULT_MCC_LOCATIONS:
{
      BaseInflaterAdapter<CardItemData> adapter=new BaseInflaterAdapter<>(new DefaultLocationCardInflater());
      int count=tableData.getCount();
      while (tableData.moveToNext()) {
        CardItemData data=new CardItemData("Country: " + tableData.getString(0),"MCC: " + tableData.getString(1),"Lat: " + tableData.getString(2),"Lon: " + tableData.getString(3),"" + (tableData.getPosition() + 1) + " / "+ count);
        adapter.addItem(data,false);
      }
      if (!tableData.isClosed()) {
        tableData.close();
      }
      return adapter;
    }
case SILENT_SMS:
{
    BaseInflaterAdapter<CapturedSmsData> adapter=new BaseInflaterAdapter<>(new CapturedSmsCardInflater());
    if (tableData.getCount() > 0) {
      while (tableData.moveToNext()) {
        CapturedSmsData getdata=new CapturedSmsData();
        getdata.setSmsTimestamp(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_TIMESTAMP)));
        getdata.setSmsType(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_SMS_TYPE)));
        getdata.setSenderNumber(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_SENDER_NUMBER)));
        getdata.setSenderMsg(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_SENDER_MSG)));
        getdata.setCurrent_lac(tableData.getInt(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_LAC)));
        getdata.setCurrent_cid(tableData.getInt(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_CID)));
        getdata.setCurrent_nettype(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_NETTYPE)));
        getdata.setCurrent_roam_status(tableData.getString(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_ROAM_STATE)));
        getdata.setCurrent_gps_lat(tableData.getDouble(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_GPS_LAT)));
        getdata.setCurrent_gps_lon(tableData.getDouble(tableData.getColumnIndex(SmsDetectionDbHelper.SMS_DATA_CURRENT_GPS_LON)));
        adapter.addItem(getdata,false);
      }
    }
    if (!tableData.isClosed()) {
      tableData.close();
    }
    return adapter;
  }
case MEASURED_SIGNAL_STRENGTHS:
{
  BaseInflaterAdapter<MeasuredCellStrengthCardData> adapter=new BaseInflaterAdapter<>(new MeasuredCellStrengthCardInflater());
  while (tableData.moveToNext()) {
    MeasuredCellStrengthCardData data=new MeasuredCellStrengthCardData(tableData.getInt(0),tableData.getInt(1),tableData.getLong(2));
    adapter.addItem(data,false);
  }
  if (!tableData.isClosed()) {
    tableData.close();
  }
  return adapter;
}
case EVENT_LOG:
{
BaseInflaterAdapter<EventLogItemData> adapter=new BaseInflaterAdapter<>(new EventLogCardInflater());
int count=tableData.getCount();
while (tableData.moveToNext()) {
  EventLogItemData data=new EventLogItemData("Time: " + tableData.getString(0),"LAC: " + tableData.getInt(1),"CID: " + tableData.getInt(2),"PSC: " + tableData.getInt(3),"Lat: " + tableData.getDouble(4),"Lon: " + tableData.getDouble(5),"Accuracy: " + tableData.getInt(6),"DetID: " + tableData.getInt(7),"Event: " + tableData.getString(8),"" + (tableData.getPosition() + 1) + " / "+ count);
  data.setIsFakeData(isExample(data));
  adapter.addItem(data,false);
}
if (!tableData.isClosed()) {
  tableData.close();
}
return adapter;
}
case DETECTION_STRINGS:
{
BaseInflaterAdapter<DetectionStringsData> adapter=new BaseInflaterAdapter<>(new DetectionStringsCardInflater());
int count=tableData.getCount();
while (tableData.moveToNext()) {
DetectionStringsData data=new DetectionStringsData(tableData.getString(0),tableData.getString(1));
adapter.addItem(data,false);
}
if (!tableData.isClosed()) {
tableData.close();
}
return adapter;
}
default :
BaseInflaterAdapter<CardItemData> adapter=new BaseInflaterAdapter<>(new CellCardInflater());
int count=tableData.getCount();
while (tableData.moveToNext()) {
CardItemData data=new CardItemData("CID: " + tableData.getString(0),"LAC: " + tableData.getString(1),"RAT: " + tableData.getString(2),"Lat: " + tableData.getString(3),"Lon: " + tableData.getString(4),"RSS: " + tableData.getString(5),"" + (tableData.getPosition() + 1) + " / "+ count);
adapter.addItem(data,false);
}
if (!tableData.isClosed()) {
tableData.close();
}
return adapter;
}
}
 else {
return null;
}
}
