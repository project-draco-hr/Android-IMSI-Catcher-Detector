{
  if (mMadeSelection) {
    v.setEnabled(false);
    getActivity().setProgressBarIndeterminateVisibility(true);
    lv.setVisibility(View.GONE);
    new AsyncTask<Void,Void,BaseInflaterAdapter>(){
      @Override protected BaseInflaterAdapter doInBackground(      Void... params){
        mDb.open();
        Cursor result;
switch (mTableSelected) {
case UNIQUE_BTS_DATA:
          result=mDb.getCellData();
        break;
case BTS_MEASUREMENTS:
      result=mDb.getLocationData();
    break;
case IMPORTED_OCID_DATA:
  result=mDb.getOpenCellIDData();
break;
case DEFAULT_MCC_LOCATIONS:
result=mDb.getDefaultMccLocationData();
break;
case SILENT_SMS:
result=mDb.getSilentSmsData();
break;
case MEASURED_SIGNAL_STRENGTHS:
result=mDb.getSignalStrengthMeasurementData();
break;
case EVENT_LOG:
result=mDb.getEventLogData();
break;
default :
throw new IllegalArgumentException("Unknown type of table");
}
BaseInflaterAdapter adapter=null;
if (result != null) {
adapter=BuildTable(result);
}
mDb.close();
return adapter;
}
@Override protected void onPostExecute(BaseInflaterAdapter adapter){
if (getActivity() == null) return;
lv.setEmptyView(emptyView);
if (adapter != null) {
lv.setAdapter(adapter);
lv.setVisibility(View.VISIBLE);
}
 else {
lv.setVisibility(View.GONE);
emptyView.setVisibility(View.VISIBLE);
}
v.setEnabled(true);
getActivity().setProgressBarIndeterminateVisibility(false);
}
}
.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
}
}
