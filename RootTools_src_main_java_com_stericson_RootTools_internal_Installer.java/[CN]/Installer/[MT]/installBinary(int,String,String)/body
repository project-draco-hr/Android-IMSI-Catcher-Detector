{
  File mf=new File(filesPath + File.separator + destName);
  if (!mf.exists() || !getFileSignature(mf).equals(getStreamSignature(context.getResources().openRawResource(sourceId)))) {
    Log.e(LOG_TAG,"Installing a new version of binary: " + destName);
    try {
      FileInputStream fis=context.openFileInput(BOGUS_FILE_NAME);
      fis.close();
    }
 catch (    FileNotFoundException e) {
      FileOutputStream fos=null;
      try {
        fos=context.openFileOutput("bogus",Context.MODE_PRIVATE);
        fos.write("justcreatedfilesdirectory".getBytes());
      }
 catch (      Exception ex) {
        if (RootTools.debugMode) {
          Log.e(LOG_TAG,ex.toString());
        }
        return false;
      }
 finally {
        if (null != fos) {
          try {
            fos.close();
            context.deleteFile(BOGUS_FILE_NAME);
          }
 catch (          IOException e1) {
          }
        }
      }
    }
catch (    IOException ex) {
      if (RootTools.debugMode) {
        Log.e(LOG_TAG,ex.toString());
      }
      return false;
    }
    InputStream iss=context.getResources().openRawResource(sourceId);
    ReadableByteChannel rfc=Channels.newChannel(iss);
    FileOutputStream oss=null;
    try {
      oss=new FileOutputStream(mf);
      FileChannel ofc=oss.getChannel();
      long pos=0;
      try {
        long size=iss.available();
        while ((pos+=ofc.transferFrom(rfc,pos,size - pos)) < size)         ;
      }
 catch (      IOException ex) {
        if (RootTools.debugMode) {
          Log.e(LOG_TAG,ex.toString());
        }
        return false;
      }
    }
 catch (    FileNotFoundException ex) {
      if (RootTools.debugMode) {
        Log.e(LOG_TAG,ex.toString());
      }
      return false;
    }
 finally {
      if (oss != null) {
        try {
          oss.flush();
          oss.getFD().sync();
          oss.close();
        }
 catch (        Exception e) {
        }
      }
    }
    try {
      iss.close();
    }
 catch (    IOException ex) {
      if (RootTools.debugMode) {
        Log.e(LOG_TAG,ex.toString());
      }
      return false;
    }
    try {
      CommandCapture command=new CommandCapture(0,false,"chmod " + mode + " "+ filesPath+ File.separator+ destName);
      Shell.startRootShell().add(command);
      commandWait(command);
    }
 catch (    Exception e) {
    }
  }
  return true;
}
