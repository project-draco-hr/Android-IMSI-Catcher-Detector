{
  NavDrawerItem selectedItem=mNavConf.getNavItems().get(position);
  String title=selectedItem.getLabel();
  DetailsContainerFragment mDetailsFrag=new DetailsContainerFragment();
switch (selectedItem.getId()) {
case DrawerMenu.ID.MAIN.PHONE_SIM_DETAILS:
    getSupportFragmentManager().beginTransaction().replace(R.id.content_frame,mDetailsFrag).commit();
  mDetailsFrag.setCurrentPage(0);
title=getString(R.string.app_name_short);
break;
case DrawerMenu.ID.MAIN.CURRENT_TREAT_LEVEL:
getSupportFragmentManager().beginTransaction().replace(R.id.content_frame,mDetailsFrag).commit();
mDetailsFrag.setCurrentPage(1);
title=getString(R.string.app_name_short);
break;
case DrawerMenu.ID.MAIN.AT_COMMAND_INTERFACE:
getSupportFragmentManager().beginTransaction().replace(R.id.content_frame,new AtCommandFragment()).commit();
break;
case DrawerMenu.ID.MAIN.DB_VIEWER:
getSupportFragmentManager().beginTransaction().replace(R.id.content_frame,mDetailsFrag).commit();
mDetailsFrag.setCurrentPage(2);
title=getString(R.string.app_name_short);
break;
case DrawerMenu.ID.APPLICATION.ABOUT:
getSupportFragmentManager().beginTransaction().replace(R.id.content_frame,new AboutFragment()).commit();
break;
case DrawerMenu.ID.APPLICATION.UPLOAD_LOCAL_BST_DATA:
new RequestTask(mContext,com.SecUpwN.AIMSICD.utils.RequestTask.DBE_UPLOAD_REQUEST).execute("");
break;
}
if (selectedItem.getId() == DrawerMenu.ID.TRACKING.TOGGLE_AIMSICD_MONITORING) {
monitorcell();
}
 else if (selectedItem.getId() == DrawerMenu.ID.TRACKING.TOGGLE_2G_ONLY_NETWORK) {
trackcell();
}
 else if (selectedItem.getId() == DrawerMenu.ID.TRACKING.TRACK_FEMTOCELL) {
trackFemtocell();
}
 else if (selectedItem.getId() == DrawerMenu.ID.MAIN.ANTENNA_MAP_VIEW) {
showmap();
}
 else if (selectedItem.getId() == DrawerMenu.ID.SETTINGS.PREFERENCES) {
Intent intent=new Intent(this,PrefActivity.class);
startActivity(intent);
}
 else if (selectedItem.getId() == DrawerMenu.ID.SETTINGS.BACKUP_DB) {
new RequestTask(mContext,RequestTask.BACKUP_DATABASE).execute();
}
 else if (selectedItem.getId() == DrawerMenu.ID.SETTINGS.RESTORE_DB) {
if (CellTracker.LAST_DB_BACKUP_VERSION < AIMSICDDbAdapter.DATABASE_VERSION) {
Helpers.msgLong(mContext,"Unable to restore backup from previous database version" + " due to structural changes!");
}
 else {
new RequestTask(mContext,RequestTask.RESTORE_DATABASE).execute();
}
}
 else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.DOWNLOAD_LOCAL_BST_DATA) {
if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {
GeoLocation loc=mAimsicdService.lastKnownLocation();
if (loc != null) {
Helpers.msgLong(mContext,"Contacting opencellid.org for data...\n" + "This may take up to a minute.");
Cell cell=new Cell();
cell.setLon(loc.getLongitudeInDegrees());
cell.setLat(loc.getLatitudeInDegrees());
Helpers.getOpenCellData(mContext,cell,RequestTask.DBE_DOWNLOAD_REQUEST);
}
 else {
Helpers.msgShort(mContext,"Waiting for location...");
LocationServices.LocationAsync locationAsync=new LocationServices.LocationAsync();
locationAsync.delegate=this;
locationAsync.execute(mAimsicdService.getCell().getCID(),mAimsicdService.getCell().getLAC(),mAimsicdService.getCell().getMNC(),mAimsicdService.getCell().getMCC());
}
}
 else {
Helpers.sendMsg(mContext,"No OpenCellID API Key detected! \nPlease enter your key in settings first.");
}
}
 else if (selectedItem.getId() == DrawerMenu.ID.MAIN.ACD) {
if (CellTracker.OCID_API_KEY != null && !CellTracker.OCID_API_KEY.equals("NA")) {
Cell.CellLookUpAsync cellLookUpAsync=new Cell.CellLookUpAsync();
cellLookUpAsync.delegate=this;
StringBuilder sb=new StringBuilder();
sb.append("http://www.opencellid.org/cell/get?key=").append(CellTracker.OCID_API_KEY);
if (mAimsicdService.getCell().getMCC() != Integer.MAX_VALUE) {
sb.append("&mcc=").append(mAimsicdService.getCell().getMCC());
}
if (mAimsicdService.getCell().getMNC() != Integer.MAX_VALUE) {
sb.append("&mnc=").append(mAimsicdService.getCell().getMNC());
}
if (mAimsicdService.getCell().getLAC() != Integer.MAX_VALUE) {
sb.append("&lac=").append(mAimsicdService.getCell().getLAC());
}
if (mAimsicdService.getCell().getCID() != Integer.MAX_VALUE) {
sb.append("&cellid=").append(mAimsicdService.getCell().getCID());
}
sb.append("&format=xml");
cellLookUpAsync.execute(sb.toString());
}
 else {
Helpers.sendMsg(mContext,"No OpenCellID API Key detected! \nPlease enter your key in settings first.");
}
}
 else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.SEND_DEBUGGING_LOG) {
Intent i=new Intent(this,DebugLogs.class);
startActivity(i);
}
 else if (selectedItem.getId() == DrawerMenu.ID.APPLICATION.QUIT) {
finish();
}
mDrawerList.setItemChecked(position,true);
if (selectedItem.updateActionBarTitle()) {
setTitle(title);
}
if (this.mDrawerLayout.isDrawerOpen(this.mDrawerList)) {
mDrawerLayout.closeDrawer(mDrawerList);
}
}
