{
  NavDrawerItem selectedItem=mNavConf.getNavItems().get(position);
switch (selectedItem.getId()) {
case 101:
    getFragmentManager().beginTransaction().replace(R.id.content_frame,new DeviceFragment()).commit();
  break;
case 102:
getFragmentManager().beginTransaction().replace(R.id.content_frame,new CellInfoFragment()).commit();
break;
case 103:
getFragmentManager().beginTransaction().replace(R.id.content_frame,new AtCommandFragment()).commit();
break;
case 104:
getFragmentManager().beginTransaction().replace(R.id.content_frame,new DbViewerFragment()).commit();
break;
case 302:
getFragmentManager().beginTransaction().replace(R.id.content_frame,new AboutFragment()).commit();
break;
}
if (selectedItem.getId() == 901) {
trackcell();
}
 else if (selectedItem.getId() == 902) {
trackFemtocell();
}
 else if (selectedItem.getId() == 105) {
showmap();
}
 else if (selectedItem.getId() == 202) {
Intent intent=new Intent(this,PrefActivity.class);
startActivity(intent);
}
 else if (selectedItem.getId() == 203) {
new RequestTask(mContext,RequestTask.BACKUP_DATABASE).execute();
}
 else if (selectedItem.getId() == 204) {
new RequestTask(mContext,RequestTask.RESTORE_DATABASE).execute();
}
 else if (selectedItem.getId() == 301) {
Location loc=mAimsicdService.lastKnownLocation();
if (loc != null && loc.hasAccuracy()) {
Helpers.msgShort(mContext,"Contacting OpenCellID.org for data...");
Helpers.getOpenCellData(mContext,loc.getLatitude(),loc.getLongitude(),RequestTask.OPEN_CELL_ID_REQUEST);
}
 else {
Helpers.msgShort(mContext,"Unable to determine your last location. \nEnable Location Services and try again.");
}
}
mDrawerList.setItemChecked(position,true);
if (selectedItem.updateActionBarTitle()) {
setTitle(selectedItem.getLabel());
}
if (this.mDrawerLayout.isDrawerOpen(this.mDrawerList)) {
mDrawerLayout.closeDrawer(mDrawerList);
}
}
